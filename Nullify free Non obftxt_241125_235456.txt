loadstring(game:HttpGet("https://raw.githubusercontent.com/Magreaperff2/Acbypass/refs/heads/main/Nigga"))() local 

N = {} local plr = game:GetService("Players").LocalPlayer function N:CreateWindow(title) 	local UI = Instance.new("ScreenGui") 	local Main = Instance.new("Frame") 	local UICorner = Instance.new("UICorner") 	local Player = Instance.new("TextLabel") 	local UIGradient = Instance.new("UIGradient") 	local TabButton = Instance.new("ImageButton") 	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint") 	local UIGradient_2 = Instance.new("UIGradient") 	local UIGradient_3 = Instance.new("UIGradient") 	local Navigation = Instance.new("ScrollingFrame") 	local UIListLayout = Instance.new("UIListLayout") 	local UIPadding = Instance.new("UIPadding") 	local Line = Instance.new("Frame") 	local Line_2 = Instance.new("Frame") 	local Line_3 = Instance.new("Frame") 	local Content = Instance.new("Frame") 	local Title_6 = Instance.new("TextLabel") 	local UIGradient_12 = Instance.new("UIGradient") 	local ExitButton = Instance.new("ImageButton") 	local Cards = Instance.new("TextButton") 	local UIGradient_13 = Instance.new("UIGradient") 	local UICorner_11 = Instance.new("UICorner") 	local Title_7 = Instance.new("TextLabel") 	local UIGradient_14 = Instance.new("UIGradient") 	 	UI.Name = "UI" 	UI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") or game:GetService("CoreGui") 	UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling 	UI.ResetOnSpawn = false 	Main.Name = "Main" 	Main.Parent = UI 	Main.BackgroundColor3 = Color3.fromRGB(71, 71, 71) 	Main.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Main.BorderSizePixel = 0 	Main.Position = UDim2.new(0, 414, 0, 150) 	Main.Size = UDim2.new(0, 519, 0, 306) 	UICorner.Parent = Main 	Player.Name = "Player" 	Player.Parent = Main 	Player.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	Player.BackgroundTransparency = 1.000 	Player.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Player.BorderSizePixel = 0 	Player.Position = UDim2.new(0.0269749518, 0, 0.885620892, 0) 	Player.Size = UDim2.new(0, 144, 0, 26) 	Player.Font = Enum.Font.SourceSans 	Player.Text = "Welcome, Justvpn" 	Player.TextColor3 = Color3.fromRGB(255, 255, 255) 	Player.TextSize = 18.000 	Player.TextXAlignment = Enum.TextXAlignment.Left 	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 	UIGradient.Rotation = -91 	UIGradient.Parent = Player 	TabButton.Name = "TabButton" 	TabButton.Parent = Main 	TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	TabButton.BackgroundTransparency = 1.000 	TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0) 	TabButton.BorderSizePixel = 0 	TabButton.Position = UDim2.new(0.0154142585, 0, 0.0196078438, 0) 	TabButton.Size = UDim2.new(0, 31, 0, 30) 	TabButton.AutoButtonColor = false 	TabButton.Image = "rbxassetid://10709759764" 	UIAspectRatioConstraint.Parent = TabButton 	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 	UIGradient_2.Rotation = -175 	UIGradient_2.Parent = TabButton 	UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 	UIGradient_3.Offset = Vector2.new(0, 0.899999976) 	UIGradient_3.Rotation = -128 	UIGradient_3.Parent = Main 	Navigation.Name = "Navigation" 	Navigation.Parent = Main 	Navigation.Active = true 	Navigation.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	Navigation.BackgroundTransparency = 1.000 	Navigation.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Navigation.BorderSizePixel = 0 	Navigation.Position = UDim2.new(0, 0, 0.169934645, 0) 	Navigation.Size = UDim2.new(0, 120, 0, 210) 	Navigation.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0) 	Navigation.CanvasSize = UDim2.new(0, 0, 10, 0) 	Navigation.ScrollBarThickness = 0 	UIListLayout.Parent = Navigation 	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center 	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder 	UIListLayout.Padding = UDim.new(0, 4) 	UIPadding.Parent = Navigation 	UIPadding.PaddingTop = UDim.new(0, 8) 	 	Line.Name = "Line" 	Line.Parent = Main 	Line.BackgroundColor3 = Color3.fromRGB(51, 51, 51) 	Line.BackgroundTransparency = 0.500 	Line.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Line.BorderSizePixel = 0 	Line.Position = UDim2.new(0, 0, 0.169934645, 0) 	Line.Size = UDim2.new(0, 519, 0, 1) 	Line_2.Name = "Line" 	Line_2.Parent = Main 	Line_2.BackgroundColor3 = Color3.fromRGB(51, 51, 51) 	Line_2.BackgroundTransparency = 0.500 	Line_2.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Line_2.BorderSizePixel = 0 	Line_2.Position = UDim2.new(0.231213868, 0, 0.173202619, 0) 	Line_2.Size = UDim2.new(0, 1, 0, 209) 	Line_3.Name = "Line" 	Line_3.Parent = Main 	Line_3.BackgroundColor3 = Color3.fromRGB(51, 51, 51) 	Line_3.BackgroundTransparency = 0.500 	Line_3.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Line_3.BorderSizePixel = 0 	Line_3.Position = UDim2.new(0, 0, 0.856209159, 0) 	Line_3.Size = UDim2.new(0, 519, 0, 1) 	Content.Name = "Content" 	Content.Parent = Main 	Content.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	Content.BackgroundTransparency = 1.000 	Content.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Content.BorderSizePixel = 0 	Content.Position = UDim2.new(0.231213868, 0, 0.173202619, 0) 	Content.Size = UDim2.new(0, 399, 0, 208) 	 	Title_6.Name = "Title" 	Title_6.Parent = Main 	Title_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	Title_6.BackgroundTransparency = 1.000 	Title_6.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Title_6.BorderSizePixel = 0 	Title_6.Position = UDim2.new(0.0905587673, 0, 0.00326797389, 0) 	Title_6.Size = UDim2.new(0, 200, 0, 50) 	Title_6.Font = Enum.Font.GrenzeGotisch 	Title_6.Text = title 	Title_6.TextColor3 = Color3.fromRGB(255, 255, 255) 	Title_6.TextSize = 36.000 	Title_6.TextWrapped = true 	Title_6.TextXAlignment = Enum.TextXAlignment.Left 	UIGradient_12.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 	UIGradient_12.Rotation = -91 	UIGradient_12.Parent = Title_6 	ExitButton.Name = "ExitButton" 	ExitButton.Parent = Main 	ExitButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	ExitButton.BackgroundTransparency = 1.000 	ExitButton.BorderColor3 = Color3.fromRGB(0, 0, 0) 	ExitButton.BorderSizePixel = 0 	ExitButton.Position = UDim2.new(0.921001911, 0, 0.0326797403, 0) 	ExitButton.Size = UDim2.new(0, 30, 0, 30) 	ExitButton.Image = "rbxassetid://10747384394" 	ExitButton.ImageColor3 = Color3.fromRGB(81, 81, 81) 	Cards.Name = "Cards" 	Cards.Parent = UI 	Cards.BackgroundColor3 = Color3.fromRGB(71, 71, 71) 	Cards.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Cards.BorderSizePixel = 0 	Cards.Position = UDim2.new(0.321946174, 0, 0.292134821, 0) 	Cards.Size = UDim2.new(0, 65, 0, 50) 	Cards.AutoButtonColor = false 	Cards.Font = Enum.Font.SourceSans 	Cards.Text = "" 	Cards.TextColor3 = Color3.fromRGB(255, 255, 255) 	Cards.TextSize = 14.000 	UIGradient_13.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 	UIGradient_13.Offset = Vector2.new(0, 0.899999976) 	UIGradient_13.Rotation = -55 	UIGradient_13.Parent = Cards 	UICorner_11.Parent = Cards 	Title_7.Name = "Title" 	Title_7.Parent = Cards 	Title_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	Title_7.BackgroundTransparency = 1.000 	Title_7.BorderColor3 = Color3.fromRGB(0, 0, 0) 	Title_7.BorderSizePixel = 0 	Title_7.Position = UDim2.new(0.274832398, 0, 0.0799999982, 0) 	Title_7.Size = UDim2.new(0, 29, 0, 41) 	Title_7.Font = Enum.Font.GrenzeGotisch 	Title_7.Text = "N" 	Title_7.TextColor3 = Color3.fromRGB(255, 255, 255) 	Title_7.TextSize = 64.000 	Title_7.TextWrapped = true 	Title_7.TextXAlignment = Enum.TextXAlignment.Left 	UIGradient_14.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 	UIGradient_14.Rotation = -91 	UIGradient_14.Parent = Title_7 	-- Scripts: 	local function VLUBA_script() -- Main.dragWindow 		local script = Instance.new('LocalScript', Main) 		local TweenService = game:GetService("TweenService") 		local UserInputService = game:GetService("UserInputService") 		local gui = script.Parent 		local dragging 		local dragInput 		local dragStart 		local startPos 		local tweenInfo = TweenInfo.new(0.16, Enum.EasingStyle.Linear, Enum.EasingDirection.Out) 		-- Function to update GUI position when dragging 		local function update(input) 			local delta = input.Position - dragStart 			local targetPos = UDim2.new( 				startPos.X.Scale, 				startPos.X.Offset + delta.X, 				startPos.Y.Scale, 				startPos.Y.Offset + delta.Y 			) 			local tween = TweenService:Create(gui, tweenInfo, {Position = targetPos}) 			tween:Play() 		end 		-- Handle mouse input for dragging the GUI 		gui.InputBegan:Connect(function(input) 			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 				dragging = true 				dragStart = input.Position 				startPos = gui.Position 				-- Listen for input state change to end dragging 				input.Changed:Connect(function() 					if input.UserInputState == Enum.UserInputState.End then 						dragging = false 					end 				end) 			end 		end) 		gui.InputChanged:Connect(function(input) 			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then 				dragInput = input 			end 		end) 		UserInputService.InputChanged:Connect(function(input) 			if input == dragInput and dragging then 				update(input) 			end 		end) 		-- Toggle the visibility of the GUI when Left Control key is pressed 		local function toggleGuiVisibility(input) 			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.LeftControl then 				gui.Visible = not gui.Visible -- Toggle visibility 			end 		end 		-- Listen for InputBegan to detect Left Control key press 		UserInputService.InputBegan:Connect(function(input, gameProcessed) 			if not gameProcessed then 				toggleGuiVisibility(input) 			end 		end) 	end 	coroutine.wrap(VLUBA_script)() 	local function LIVU_script() -- Cards.DragButton 		local script = Instance.new('LocalScript', Cards) 		local TweenService = game:GetService("TweenService") 		local UserInputService = game:GetService("UserInputService") 		local gui = script.Parent 		local dragging 		local dragInput 		local dragStart 		local startPos 		local tweenInfo = TweenInfo.new(0.16, Enum.EasingStyle.Linear, Enum.EasingDirection.Out) 		local function update(input) 			local delta = input.Position - dragStart 			local targetPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) 			local tween = TweenService:Create(gui, tweenInfo, {Position = targetPos}) 			tween:Play() 		end 		gui.InputBegan:Connect(function(input) 			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 				dragging = true 				dragStart = input.Position 				startPos = gui.Position 				input.Changed:Connect(function() 					if input.UserInputState == Enum.UserInputState.End then 						dragging = false 					end 				end) 			end 		end) 		gui.InputChanged:Connect(function(input) 			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then 				dragInput = input 			end 		end) 		UserInputService.InputChanged:Connect(function(input) 			if input == dragInput and dragging then 				update(input) 			end 		end) 	end 	coroutine.wrap(LIVU_script)() 	local function OOGHDSH_script() -- UI.ToggleUIButton 		local script = Instance.new('LocalScript', UI) 		local screenGui = script.Parent 		local button = screenGui:WaitForChild("Cards") 		local main = screenGui:WaitForChild("Main") 		local function toggleVisibility() 			if main.Visible then 				main.Visible = false 			else 				main.Visible = true 			end 		end 		button.MouseButton1Click:Connect(toggleVisibility) 	end 	coroutine.wrap(OOGHDSH_script)() 	 	function N:CreateTab(title, id) 		local Tab = {} 		local TabButton = Instance.new("ImageButton") 		local UICorner_3 = Instance.new("UICorner") 		local UIGradient_6 = Instance.new("UIGradient") 		local Title_2 = Instance.new("TextLabel") 		local UIGradient_7 = Instance.new("UIGradient") 		local Icon_2 = Instance.new("ImageLabel") 		local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint") 		local Items = Instance.new("ScrollingFrame") 		local UIPadding_2 = Instance.new("UIPadding") 		local UIListLayout_2 = Instance.new("UIListLayout") 		TabButton.Name = "Tab" 		TabButton.Parent = Navigation 		TabButton.BackgroundColor3 = Color3.fromRGB(121, 121, 121) 		TabButton.BackgroundTransparency = 1.000 		TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0) 		TabButton.BorderSizePixel = 0 		TabButton.Position = UDim2.new(0.0833333358, 0, 0, 0) 		TabButton.Size = UDim2.new(0, 110, 0, 34) 		TabButton.AutoButtonColor = false 		UICorner_3.CornerRadius = UDim.new(0, 4) 		UICorner_3.Parent = TabButton 		UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 		UIGradient_6.Rotation = -180 		UIGradient_6.Parent = TabButton 		Title_2.Name = "Title" 		Title_2.Parent = TabButton 		Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Title_2.BackgroundTransparency = 1.000 		Title_2.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Title_2.BorderSizePixel = 0 		Title_2.Position = UDim2.new(0.0815207735, 0, 0.0915033668, 0) 		Title_2.Size = UDim2.new(0, 89, 0, 26) 		Title_2.Font = Enum.Font.SourceSans 		Title_2.Text = title 		Title_2.TextColor3 = Color3.fromRGB(255, 255, 255) 		Title_2.TextSize = 18.000 		Title_2.TextTransparency = 0.600 		Title_2.TextXAlignment = Enum.TextXAlignment.Left 		UIGradient_7.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 		UIGradient_7.Rotation = -91 		UIGradient_7.Parent = Title_2 		Icon_2.Name = "Icon" 		Icon_2.Parent = TabButton 		Icon_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Icon_2.BackgroundTransparency = 1.000 		Icon_2.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Icon_2.BorderSizePixel = 0 		Icon_2.Position = UDim2.new(0.800000012, 0, 0.176470593, 0) 		Icon_2.Size = UDim2.new(0, 22, 0, 23) 		Icon_2.Image = "rbxassetid://"..id 		Icon_2.ImageTransparency = 0.800 		UIAspectRatioConstraint_3.Parent = Icon_2 		Items.Name = title 		Items.Parent = Content 		Items.Active = true 		Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Items.BackgroundTransparency = 1.000 		Items.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Items.BorderSizePixel = 0 		Items.Size = UDim2.new(0, 399, 0, 209) 		Items.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0) 		Items.ScrollBarThickness = 0 		Items.Visible = false 		UIPadding_2.Parent = Items 		UIPadding_2.PaddingTop = UDim.new(0, 8) 		UIListLayout_2.Parent = Items 		UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center 		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder 		UIListLayout_2.Padding = UDim.new(0, 6) 		local function OnTabSelected() 			TabButton.BackgroundTransparency = 0 			Title_2.TextTransparency = 0 			Icon_2.ImageTransparency = 0 			Items.Visible = true 			for _, otherTab in pairs(Navigation:GetChildren()) do 				if otherTab:IsA("ImageButton") and otherTab ~= TabButton then 					otherTab.BackgroundTransparency = 1 					otherTab.Title.TextTransparency = 0.6 					otherTab.Icon.ImageTransparency = 0.8 					local otherItems = Content:FindFirstChild(otherTab.Title.Text) 					if otherItems then 						otherItems.Visible = false 					end 				end 			end 		end 		TabButton.MouseButton1Click:Connect(OnTabSelected) 		return TabButton, Items 	end 	 	function N:CreateToggle(title, TabParent, callback) 		local Toggle = Instance.new("ImageButton") 		local Title_4 = Instance.new("TextLabel") 		local UICorner_6 = Instance.new("UICorner") 		local UIStroke_3 = Instance.new("UIStroke") 		local UIGradient_9 = Instance.new("UIGradient") 		local Checkbox_2 = Instance.new("Frame") 		local UICorner_7 = Instance.new("UICorner") 		local UIStroke_4 = Instance.new("UIStroke") 		Toggle.Name = "Toggle" 		Toggle.Parent = TabParent 		Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0) 		Toggle.BackgroundTransparency = 0.800 		Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Toggle.BorderSizePixel = 0 		Toggle.Position = UDim2.new(0.0275689214, 0, 0, 0) 		Toggle.Size = UDim2.new(0, 377, 0, 37) 		Toggle.AutoButtonColor = false 		Title_4.Name = "Title" 		Title_4.Parent = Toggle 		Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Title_4.BackgroundTransparency = 1.000 		Title_4.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Title_4.BorderSizePixel = 0 		Title_4.Position = UDim2.new(0.0258178711, 0, 0.221806332, 0) 		Title_4.Size = UDim2.new(0, 89, 0, 21) 		Title_4.Font = Enum.Font.SourceSans 		Title_4.Text = title 		Title_4.TextColor3 = Color3.fromRGB(255, 255, 255) 		Title_4.TextSize = 18.000 		Title_4.TextTransparency = 0.600 		Title_4.TextXAlignment = Enum.TextXAlignment.Left 		UICorner_6.CornerRadius = UDim.new(0, 4) 		UICorner_6.Parent = Toggle 		UIStroke_3.Parent = Toggle 		UIStroke_3.Color = Color3.fromRGB(255, 255, 255) 		UIStroke_3.Transparency = 0.900 		UIStroke_3.Thickness = 1.300 		UIGradient_9.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 		UIGradient_9.Rotation = 50 		UIGradient_9.Parent = UIStroke_3 		Checkbox_2.Name = "Checkbox" 		Checkbox_2.Parent = Toggle 		Checkbox_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31) 		Checkbox_2.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Checkbox_2.BorderSizePixel = 0 		Checkbox_2.Position = UDim2.new(0.907161832, 0, 0.127765551, 0) 		Checkbox_2.Size = UDim2.new(0, 29, 0, 26) 		UICorner_7.CornerRadius = UDim.new(0, 4) 		UICorner_7.Parent = Checkbox_2 		UIStroke_4.Parent = Checkbox_2 		UIStroke_4.Color = Color3.fromRGB(51, 51, 51) 		UIStroke_4.Thickness = 1.300 		local function toggleAction(isChecked) 			local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) 			local uiStrokeTween = game:GetService("TweenService"):Create(UIStroke_3, tweenInfo, {Transparency = isChecked and 0 or 0.9}) 			local titleTween = game:GetService("TweenService"):Create(Title_4, tweenInfo, {TextTransparency = isChecked and 0 or 0.6}) 			local checkboxTween = game:GetService("TweenService"):Create(Checkbox_2, tweenInfo, {BackgroundColor3 = isChecked and Color3.fromRGB(88, 68, 148) or Color3.fromRGB(31, 31, 31)}) 			uiStrokeTween:Play() 			titleTween:Play() 			checkboxTween:Play() 			if callback then 				callback(isChecked) 			end 		end 		toggleAction(false) 		Toggle.MouseButton1Click:Connect(function() 			local isChecked = Checkbox_2.BackgroundColor3 == Color3.fromRGB(88, 68, 148) 			toggleAction(not isChecked) 		end) 	end 	 	function N:CreateSlider(title, TabParent, min, max, callback) 		local Slider = Instance.new("ImageButton") 		local Title_5 = Instance.new("TextLabel") 		local UICorner_8 = Instance.new("UICorner") 		local UIStroke_5 = Instance.new("UIStroke") 		local UIGradient_10 = Instance.new("UIGradient") 		local SliderBack = Instance.new("Frame") 		local Draggable = Instance.new("Frame") 		local UIGradient_11 = Instance.new("UIGradient") 		local UICorner_9 = Instance.new("UICorner") 		local UICorner_10 = Instance.new("UICorner") 		local Value = Instance.new("TextLabel") 		local UIS = game:GetService("UserInputService") 		Slider.Name = "Slider" 		Slider.Parent = TabParent 		Slider.BackgroundColor3 = Color3.fromRGB(0, 0, 0) 		Slider.BackgroundTransparency = 0.800 		Slider.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Slider.BorderSizePixel = 0 		Slider.Position = UDim2.new(0.0275689214, 0, 0.427860707, 0) 		Slider.Size = UDim2.new(0, 377, 0, 38) 		Slider.AutoButtonColor = false 		Title_5.Name = "Title" 		Title_5.Parent = Slider 		Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Title_5.BackgroundTransparency = 1.000 		Title_5.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Title_5.BorderSizePixel = 0 		Title_5.Position = UDim2.new(0.0258178711, 0, 0.110695392, 0) 		Title_5.Size = UDim2.new(0, 89, 0, 21) 		Title_5.Font = Enum.Font.SourceSans 		Title_5.Text = title 		Title_5.TextColor3 = Color3.fromRGB(255, 255, 255) 		Title_5.TextSize = 18.000 		Title_5.TextTransparency = 0.600 		Title_5.TextXAlignment = Enum.TextXAlignment.Left 		UICorner_8.CornerRadius = UDim.new(0, 4) 		UICorner_8.Parent = Slider 		UIStroke_5.Parent = Slider 		UIStroke_5.Color = Color3.fromRGB(255, 255, 255) 		UIStroke_5.Transparency = 0.900 		UIStroke_5.Thickness = 1.300 		UIGradient_10.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 		UIGradient_10.Rotation = 50 		UIGradient_10.Parent = UIStroke_5 		-- Same treatment as other UI elements 		local function ApplyGradientToUIStroke() 			-- Apply gradient similar to other elements like Draggable 			local gradient = Instance.new("UIGradient") 			gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 			gradient.Rotation = -180 			gradient.Parent = UIStroke_5 		end 		ApplyGradientToUIStroke() 		SliderBack.Name = "SliderBack" 		SliderBack.Parent = Slider 		SliderBack.BackgroundColor3 = Color3.fromRGB(31, 31, 31) 		SliderBack.BorderColor3 = Color3.fromRGB(0, 0, 0) 		SliderBack.BorderSizePixel = 0 		SliderBack.Position = UDim2.new(0.0185676385, 0, 0.694999993, 0) 		SliderBack.Size = UDim2.new(0, 362, 0, 4) 		Draggable.Name = "Draggable" 		Draggable.Parent = SliderBack 		Draggable.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Draggable.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Draggable.BorderSizePixel = 0 		Draggable.Size = UDim2.new(0, 277, 0, 4) 		UIGradient_11.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(113, 94, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(31, 31, 31))} 		UIGradient_11.Rotation = -180 		UIGradient_11.Parent = Draggable 		UICorner_9.Parent = Draggable 		UICorner_10.Parent = SliderBack 		Value.Name = "Value" 		Value.Parent = Slider 		Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Value.BackgroundTransparency = 1.000 		Value.BorderColor3 = Color3.fromRGB(0, 0, 0) 		Value.BorderSizePixel = 0 		Value.Position = UDim2.new(0.741998255, 0, 0.215958446, 0) 		Value.Size = UDim2.new(0, 89, 0, 12) 		Value.Font = Enum.Font.SourceSans 		Value.Text = string.format("%.1f", min) 		Value.TextColor3 = Color3.fromRGB(255, 255, 255) 		Value.TextSize = 18.000 		Value.TextTransparency = 0.600 		Value.TextXAlignment = Enum.TextXAlignment.Right 		local currentValue = min 		local isDragging = false 		local touchID = nil 		local function UpdateSliderPosition() 			local percentage = math.clamp((currentValue - min) / (max - min), 0, 1) 			Value.Text = string.format("%.1f", currentValue) 			Draggable.Size = UDim2.new(percentage, 0, 1, 0) 			callback(currentValue) 		end 		local function StartDragging(input) 			isDragging = true 			Title_5.TextTransparency = 0 			Value.TextTransparency = 0 			Draggable.BackgroundTransparency = 0 			UIStroke_5.Transparency = 0 			if input.UserInputType == Enum.UserInputType.Touch then 				touchID = input.UserInputIndex 			end 		end 		local function UpdateDragging(input) 			local inputPosition 			if input.UserInputType == Enum.UserInputType.MouseMovement then 				inputPosition = input.Position.X 			elseif input.UserInputType == Enum.UserInputType.Touch then 				inputPosition = input.Position.X 			end 			if isDragging then 				local sliderX = SliderBack.AbsolutePosition.X 				local sliderWidth = SliderBack.AbsoluteSize.X 				local newPercentage = math.clamp((inputPosition - sliderX) / sliderWidth, 0, 1) 				currentValue = min + (newPercentage * (max - min)) 				currentValue = math.round(currentValue * 10) / 10 				UpdateSliderPosition() 			end 		end 		local function StopDragging(input) 			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 				isDragging = false 				touchID = nil 				Title_5.TextTransparency = 0.6 				Value.TextTransparency = 0.6 				Draggable.BackgroundTransparency = 0.6 				UIStroke_5.Transparency = 0.9 			end 		end 		Slider.MouseButton1Down:Connect(StartDragging) 		UIS.InputChanged:Connect(UpdateDragging) 		UIS.InputEnded:Connect(StopDragging) 		UpdateSliderPosition() 	end end N:CreateWindow("test") local tab1, tab1 = N:CreateTab("Main", 4483362458) N:CreateToggle("Magnets", tab1, function(state) local TweenService = game:GetService("TweenService") local Players = game:GetService("Players") local RunService = game:GetService("RunService") local Workspace = game:GetService("Workspace") local player = Players.LocalPlayer local character = player.Character or player.CharacterAdded:Wait() local catchRight = nil local magnetToggle = false local magnetRange = 0 local magnetDelay = 0 local tableRange = 0 local tableDelay = 0 local function updateCharacter() if player.Character then character = player.Character catchRight = character:FindFirstChild("CatchRight") end end RunService.RenderStepped:Connect(function() if not player.Character then player.CharacterAdded:Wait() end updateCharacter() end) local function getClosestFootball() local closestFootball = nil local closestDistance = magnetRange for _, obj in pairs(Workspace:GetChildren()) do if obj:IsA("BasePart") and obj.Name == "Football" then local distance = (obj.Position - character.HumanoidRootPart.Position).Magnitude if distance < closestDistance then closestDistance = distance closestFootball = obj end end end return closestFootball end local function catchFootball(football) if not football or not catchRight then return end local tweenInfo = TweenInfo.new( magnetDelay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out ) local goal = {Position = football.Position} local tween = TweenService:Create(catchRight, tweenInfo, goal) tween:Play() end RunService.RenderStepped:Connect(function() if magnetToggle then local football = getClosestFootball() catchFootball(football) end end) RunService.Heartbeat:Connect(function() local closestFootball = getClosestFootball() if closestFootball then catchFootball(closestFootball) end end) end) N:CreateSlider("Magnets range", tab1, 0, 100, function(range) print("Magnet Range set to: " .. range) end) local tab2, tab2 = N:CreateTab("Player", 4483362458) N:CreateSlider("JumpPower", tab2, 60, 100, function(JP) game.Players.LocalPlayer.Character.Humanoid.JumpPower = JP end) N:CreateSlider("WalkSpeed", tab2, 16, 100, function(WS) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WS end) local tab3, tab3 = N:CreateTab("Physics", 4483362458) N:CreateToggle("Quick tp", tab3, function(state) local UserInputService = game:GetService("UserInputService") local player = game.Players.LocalPlayer local character = player.Character or player.CharacterAdded:Wait() local humanoidRootPart = character:WaitForChild("HumanoidRootPart") local teleportDistance = 0.77 local function teleportForward() local currentCFrame = humanoidRootPart.CFrame local forwardDirection = currentCFrame.LookVector local newPosition = currentCFrame.Position + (forwardDirection * teleportDistance) humanoidRootPart.CFrame = CFrame.new(newPosition) end UserInputService.InputBegan:Connect(function(input, gameProcessedEvent) if input.KeyCode == Enum.KeyCode.F and not gameProcessedEvent then teleportForward() end end) end)